name: Polybot Deployment

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.2.0

    - name: Initialize Terraform
      run: terraform init

    - name: Apply Terraform
      run: terraform apply -lockfile=.terraform.lock.hcl -auto-approve

    - name: Get instance IPs
      id: get-ips
      run: |
        INSTANCE_IPS=$(terraform output -json | jq -r '.app_server_instance_ips.value[]')
        echo "INSTANCE_IPS=$INSTANCE_IPS" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Read .env file
      id: read-env
      run: |
        export $(grep -v '^#' .env | xargs)
        echo "POLYBOT_IMG_NAME=${POLYBOT_IMG_NAME}" >> $GITHUB_ENV

    - name: Extract version from image name
      id: extract-version
      run: |
        VERSION=$(echo "${{ env.POLYBOT_IMG_NAME }}" | grep -oP '\d+\.\d+\.\d+')
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/polybot:${{ env.VERSION }} .
        docker push ${{ secrets.DOCKER_USERNAME }}/polybot:${{ env.VERSION }}

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to AWS EC2
      run: |
        for IP in ${{ env.INSTANCE_IPS }}; do
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@$IP << 'EOF'
          cd /home/ubuntu/polybot
          export $(grep -v '^#' .env | xargs)
          docker-compose pull polybot
          docker-compose up -d
          EOF
        done
