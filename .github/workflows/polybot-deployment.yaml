name: Polybot Deployment

on:
  workflow_run:
    workflows: [ "Yolo5 Microservice Deployment" ]
    types:
      - completed

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.2.0

    - name: Initialize Terraform
      run: terraform init -upgrade
      working-directory: terraform

    - name: Apply Terraform
      run: terraform apply -var-file=main.tfvars -auto-approve
      working-directory: terraform

    - name: Capture Terraform Output
      id: capture-output
      run: |
        echo "Capturing instance IPs..."
        APP_SERVER_IP=$(terraform output -raw app_server_instance_ip)
        APP_SERVER_2_IP=$(terraform output -raw app_server_2_instance_ip)
        APP_SERVER_IP_PROCESSED=${APP_SERVER_IP%%::*}
        APP_SERVER_2_IP_PROCESSED=${APP_SERVER_2_IP%%::*}
        echo ${APP_SERVER_IP_PROCESSED}
        echo ${APP_SERVER_2_IP_PROCESSED}
        
        echo "APP_SERVER_IP=18.171.169.150" >> $GITHUB_ENV
        echo "APP_SERVER_2_IP=13.42.40.147" >> $GITHUB_ENV
      working-directory: terraform

    - name: Read .env file
      id: read-env
      run: |
        export $(grep -v '^#' polybot/.env | xargs)
        echo "POLYBOT_IMG_NAME=${POLYBOT_IMG_NAME}"
        echo "IMAGES_BUCKET_NAME=${IMAGES_BUCKET_NAME}"
        echo "DYNAMODB_TABLE_NAME=${DYNAMODB_TABLE_NAME}"
        echo "POLYBOT_IMG_NAME=${POLYBOT_IMG_NAME}" >> $GITHUB_ENV
        echo "IMAGES_BUCKET_NAME=${IMAGES_BUCKET_NAME}" >> $GITHUB_ENV
        echo "DYNAMODB_TABLE_NAME=${DYNAMODB_TABLE_NAME}" >> $GITHUB_ENV

    - name: Set up Docker Build
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        echo "Building and pushing Docker image with tag: $IMAGE_TAG"
        docker build -t ${{ env.POLYBOT_IMG_NAME }} .
        docker push ${{ env.POLYBOT_IMG_NAME }}
      working-directory: polybot

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to AWS EC2
      run: |
        echo "Deploying to instances: ${{ env.APP_SERVER_IP }} and ${{ env.APP_SERVER_2_IP }}"
        for IP in ${{ env.APP_SERVER_IP }} ${{ env.APP_SERVER_2_IP }}; do
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@$IP << EOF
            cd /home/ubuntu/polybot
            echo "Recreating .env file"
            sudo tee .env > /dev/null << EOT
        POLYBOT_IMG_NAME=${{ env.POLYBOT_IMG_NAME }}
        IMAGES_BUCKET_NAME=${{ env.IMAGES_BUCKET_NAME }}
        DYNAMODB_TABLE_NAME=${{ env.DYNAMODB_TABLE_NAME }}
        EOT
            echo "Updated .env file:"
            sudo cat .env
            echo "Removing old Docker images"
            sudo docker image prune -af
            echo "Pulling latest Docker image"
            sudo docker pull ${{ env.POLYBOT_IMG_NAME }}
            echo "Starting Docker Compose"
            sudo docker-compose up -d
            echo "Deployment completed"
        EOF
        done
